{"Concurrency in Go": {"nodes": [{"id": "CG1", "name": "Concurrency in Go", "type": "concept"}, {"id": "CG1_F_00", "name": "Concurrency is the ability of a program to progress on more than one task simultaneously.", "type": "feature"}, {"id": "CG1_F_01", "name": "Go provides powerful concurrency primitives such as goroutines and channels.", "type": "feature"}, {"id": "CG1_F_02", "name": "Go's concurrent execution is based on a model called CSP (Communicating Sequential Processes).", "type": "feature"}, {"id": "CG1.1", "name": "Goroutines", "type": "concept"}, {"id": "CG1.1_F_00", "name": "Goroutines are lightweight threads managed by the Go runtime.", "type": "feature"}, {"id": "CG1.1_F_01", "name": "Goroutines are started with the \"go\" keyword before a function call.", "type": "feature"}, {"id": "CG1.1_F_02", "name": "Goroutines are cheaper than threads and Go can run millions of goroutines at the same time.", "type": "feature"}, {"id": "CG1.1.1", "name": "Creating Goroutines", "type": "concept"}, {"id": "CG1.1.1_F_00", "name": "A goroutine is started by using the \"go\" keyword followed by a function invocation.", "type": "feature"}, {"id": "CG1.1.1_F_01", "name": "The \"go\" keyword allows the function to run concurrently with the rest of the program.", "type": "feature"}, {"id": "CG1.1.1_F_02", "name": "The function can be an anonymous function or a named function.", "type": "feature"}, {"id": "CG1.1.2", "name": "Goroutine Scheduling", "type": "concept"}, {"id": "CG1.1.2_F_00", "name": "The Go runtime scheduler handles the execution of goroutines.", "type": "feature"}, {"id": "CG1.1.2_F_01", "name": "The scheduler uses a technique known as m:n scheduling, where m goroutines are multiplexed over n OS threads.", "type": "feature"}, {"id": "CG1.1.2_F_02", "name": "The Go scheduler is cooperative, meaning that it only switches between goroutines at predefined points.", "type": "feature"}, {"id": "CG1.1.3", "name": "Goroutine Synchronization", "type": "concept"}, {"id": "CG1.1.3_F_00", "name": "Go provides synchronization primitives like WaitGroups and Mutexes to manage the execution of goroutines.", "type": "feature"}, {"id": "CG1.1.3_F_01", "name": "WaitGroups are used to wait for a collection of goroutines to finish executing.", "type": "feature"}, {"id": "CG1.1.3_F_02", "name": "Mutexes are used to ensure that only one goroutine accesses a variable or a section of code at a time.", "type": "feature"}, {"id": "CG1.1.3.1", "name": "Mutexes", "type": "concept"}, {"id": "CG1.1.3.1_F_00", "name": "Mutexes are used to ensure that only one goroutine accesses a variable or a section of code at a time.", "type": "feature"}, {"id": "CG1.1.3.1_F_01", "name": "Mutexes are implemented using the Mutex type in the sync package.", "type": "feature"}, {"id": "CG1.1.3.1_F_02", "name": "The Lock() and Unlock() methods are used to control access to the code block.", "type": "feature"}, {"id": "CG1.1.3.2", "name": "WaitGroups", "type": "concept"}, {"id": "CG1.1.3.2_F_00", "name": "WaitGroups are used to wait for a collection of goroutines to finish executing.", "type": "feature"}, {"id": "CG1.1.3.2_F_01", "name": "WaitGroups are implemented using the WaitGroup type in the sync package.", "type": "feature"}, {"id": "CG1.1.3.2_F_02", "name": "The Add(), Done(), and Wait() methods are used to control the execution of the goroutines.", "type": "feature"}, {"id": "CG1.2", "name": "Channels", "type": "concept"}, {"id": "CG1.2_F_00", "name": "Channels are the primary mechanism for goroutines to communicate and synchronize.", "type": "feature"}, {"id": "CG1.2_F_01", "name": "Channels are typed, meaning that they can only send and receive values of a specific type.", "type": "feature"}, {"id": "CG1.2_F_02", "name": "Channels can be unbuffered (synchronous) or buffered (asynchronous).", "type": "feature"}, {"id": "CG1.2.1", "name": "Creating Channels", "type": "concept"}, {"id": "CG1.2.1_F_00", "name": "A channel is created using the `make` function along with the `chan` keyword.", "type": "feature"}, {"id": "CG1.2.1_F_01", "name": "The syntax for creating an unbuffered channel is: `ch := make(chan type)`", "type": "feature"}, {"id": "CG1.2.1_F_02", "name": "The syntax for creating a buffered channel is: `ch := make(chan type, capacity)`", "type": "feature"}, {"id": "CG1.2.2", "name": "Channel Operations", "type": "concept"}, {"id": "CG1.2.2_F_00", "name": "The `<-` operator is used to send and receive data on a channel.", "type": "feature"}, {"id": "CG1.2.2_F_01", "name": "The syntax to send data on a channel is: `ch <- value`", "type": "feature"}, {"id": "CG1.2.2_F_02", "name": "The syntax to receive data from a channel is: `value := <-ch`", "type": "feature"}, {"id": "CG1.2.2_F_03", "name": "The `close` function is used to close a channel.", "type": "feature"}, {"id": "CG1.2.2.1", "name": "Sending Data on Channels", "type": "concept"}, {"id": "CG1.2.2.1_F_00", "name": "The `<-` operator is used to send data on a channel.", "type": "feature"}, {"id": "CG1.2.2.1_F_01", "name": "The syntax to send data on a channel is: `ch <- value`", "type": "feature"}, {"id": "CG1.2.2.2", "name": "Receiving Data from Channels", "type": "concept"}, {"id": "CG1.2.2.2_F_00", "name": "The `<-` operator is used to receive data from a channel.", "type": "feature"}, {"id": "CG1.2.2.2_F_01", "name": "The syntax to receive data from a channel is: `value := <-ch`", "type": "feature"}, {"id": "CG1.2.3", "name": "Iterating Over Channels", "type": "concept"}, {"id": "CG1.2.3_F_00", "name": "The `range` keyword is used to iterate over the values in a channel until the channel is closed.", "type": "feature"}, {"id": "CG1.2.3_F_01", "name": "The syntax to iterate over a channel is: `for i := range ch { ... }`", "type": "feature"}, {"id": "CG1.2.4", "name": "Select Statement", "type": "concept"}, {"id": "CG1.2.4_F_00", "name": "The select statement is used to choose from multiple send/receive channel operations.", "type": "feature"}, {"id": "CG1.2.4_F_01", "name": "The select statement blocks until one of its cases can run, then it executes that case.", "type": "feature"}, {"id": "CG1.2.4_F_02", "name": "If multiple cases are ready, it selects one at random.", "type": "feature"}, {"id": "CG1.2.4_F_03", "name": "The syntax for the select statement is: `select { case operation1: ... case operation2: ... }`", "type": "feature"}, {"id": "CG1.2.5", "name": "Channel Direction", "type": "concept"}, {"id": "CG1.2.5_F_00", "name": "Channels can be defined with a direction to restrict them to either send-only or receive-only operations.", "type": "feature"}, {"id": "CG1.2.5_F_01", "name": "The syntax to define a send-only channel is: `ch := make(chan<- type)`", "type": "feature"}, {"id": "CG1.2.5_F_02", "name": "The syntax to define a receive-only channel is: `ch := make(<-chan type)`", "type": "feature"}], "edges": [{"source": "CG1", "target": "CG1_F_00", "type": "feature"}, {"source": "CG1", "target": "CG1_F_01", "type": "feature"}, {"source": "CG1", "target": "CG1_F_02", "type": "feature"}, {"source": "CG1.1", "target": "CG1.1_F_00", "type": "feature"}, {"source": "CG1.1", "target": "CG1.1_F_01", "type": "feature"}, {"source": "CG1.1", "target": "CG1.1_F_02", "type": "feature"}, {"source": "CG1", "target": "CG1.1", "type": "concept"}, {"source": "CG1.1.1", "target": "CG1.1.1_F_00", "type": "feature"}, {"source": "CG1.1.1", "target": "CG1.1.1_F_01", "type": "feature"}, {"source": "CG1.1.1", "target": "CG1.1.1_F_02", "type": "feature"}, {"source": "CG1.1", "target": "CG1.1.1", "type": "concept"}, {"source": "CG1.1.2", "target": "CG1.1.2_F_00", "type": "feature"}, {"source": "CG1.1.2", "target": "CG1.1.2_F_01", "type": "feature"}, {"source": "CG1.1.2", "target": "CG1.1.2_F_02", "type": "feature"}, {"source": "CG1.1", "target": "CG1.1.2", "type": "concept"}, {"source": "CG1.1.3", "target": "CG1.1.3_F_00", "type": "feature"}, {"source": "CG1.1.3", "target": "CG1.1.3_F_01", "type": "feature"}, {"source": "CG1.1.3", "target": "CG1.1.3_F_02", "type": "feature"}, {"source": "CG1.1", "target": "CG1.1.3", "type": "concept"}, {"source": "CG1.1.3.1", "target": "CG1.1.3.1_F_00", "type": "feature"}, {"source": "CG1.1.3.1", "target": "CG1.1.3.1_F_01", "type": "feature"}, {"source": "CG1.1.3.1", "target": "CG1.1.3.1_F_02", "type": "feature"}, {"source": "CG1.1.3", "target": "CG1.1.3.1", "type": "concept"}, {"source": "CG1.1.3.2", "target": "CG1.1.3.2_F_00", "type": "feature"}, {"source": "CG1.1.3.2", "target": "CG1.1.3.2_F_01", "type": "feature"}, {"source": "CG1.1.3.2", "target": "CG1.1.3.2_F_02", "type": "feature"}, {"source": "CG1.1.3", "target": "CG1.1.3.2", "type": "concept"}, {"source": "CG1.2", "target": "CG1.2_F_00", "type": "feature"}, {"source": "CG1.2", "target": "CG1.2_F_01", "type": "feature"}, {"source": "CG1.2", "target": "CG1.2_F_02", "type": "feature"}, {"source": "CG1", "target": "CG1.2", "type": "concept"}, {"source": "CG1.2.1", "target": "CG1.2.1_F_00", "type": "feature"}, {"source": "CG1.2.1", "target": "CG1.2.1_F_01", "type": "feature"}, {"source": "CG1.2.1", "target": "CG1.2.1_F_02", "type": "feature"}, {"source": "CG1.2", "target": "CG1.2.1", "type": "concept"}, {"source": "CG1.2.2", "target": "CG1.2.2_F_00", "type": "feature"}, {"source": "CG1.2.2", "target": "CG1.2.2_F_01", "type": "feature"}, {"source": "CG1.2.2", "target": "CG1.2.2_F_02", "type": "feature"}, {"source": "CG1.2.2", "target": "CG1.2.2_F_03", "type": "feature"}, {"source": "CG1.2", "target": "CG1.2.2", "type": "concept"}, {"source": "CG1.2.2.1", "target": "CG1.2.2.1_F_00", "type": "feature"}, {"source": "CG1.2.2.1", "target": "CG1.2.2.1_F_01", "type": "feature"}, {"source": "CG1.2.2", "target": "CG1.2.2.1", "type": "concept"}, {"source": "CG1.2.2.2", "target": "CG1.2.2.2_F_00", "type": "feature"}, {"source": "CG1.2.2.2", "target": "CG1.2.2.2_F_01", "type": "feature"}, {"source": "CG1.2.2", "target": "CG1.2.2.2", "type": "concept"}, {"source": "CG1.2.3", "target": "CG1.2.3_F_00", "type": "feature"}, {"source": "CG1.2.3", "target": "CG1.2.3_F_01", "type": "feature"}, {"source": "CG1.2", "target": "CG1.2.3", "type": "concept"}, {"source": "CG1.2.4", "target": "CG1.2.4_F_00", "type": "feature"}, {"source": "CG1.2.4", "target": "CG1.2.4_F_01", "type": "feature"}, {"source": "CG1.2.4", "target": "CG1.2.4_F_02", "type": "feature"}, {"source": "CG1.2.4", "target": "CG1.2.4_F_03", "type": "feature"}, {"source": "CG1.2", "target": "CG1.2.4", "type": "concept"}, {"source": "CG1.2.5", "target": "CG1.2.5_F_00", "type": "feature"}, {"source": "CG1.2.5", "target": "CG1.2.5_F_01", "type": "feature"}, {"source": "CG1.2.5", "target": "CG1.2.5_F_02", "type": "feature"}, {"source": "CG1.2", "target": "CG1.2.5", "type": "concept"}]}}