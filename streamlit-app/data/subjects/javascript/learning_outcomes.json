{"Syntax": [{"learning_outcome": "List the rules for writing programs in Javascript.", "concept_ids": ["JS1"]}, {"learning_outcome": "Define Javascript Syntax.", "concept_ids": ["JS1"]}, {"learning_outcome": "Recall the purpose of Javascript statements.", "concept_ids": ["JS1.1"]}, {"learning_outcome": "Identify the end of a Javascript statement.", "concept_ids": ["JS1.1"]}, {"learning_outcome": "List the types of declaration statements in Javascript.", "concept_ids": ["JS1.1.1"]}, {"learning_outcome": "Recognize the keywords used to declare variables in Javascript.", "concept_ids": ["JS1.1.1"]}, {"learning_outcome": "Recall the difference between \"var\", \"let\", and \"const\".", "concept_ids": ["JS1.1.1.1", "JS1.1.1.2", "JS1.1.1.3"]}, {"learning_outcome": "Identify the role of expression statements in Javascript.", "concept_ids": ["JS1.1.2"]}, {"learning_outcome": "Recognize the use of control flow statements in Javascript.", "concept_ids": ["JS1.1.3"]}, {"learning_outcome": "Recall the structure of a function declaration statement in Javascript.", "concept_ids": ["JS1.1.4"]}, {"learning_outcome": "Recognize the purpose of a return statement in Javascript.", "concept_ids": ["JS1.1.5"]}, {"learning_outcome": "List the reserved keywords in Javascript.", "concept_ids": ["JS1.2"]}, {"learning_outcome": "Identify the control flow keywords in Javascript.", "concept_ids": ["JS1.2.1"]}, {"learning_outcome": "Recall the declaration keywords in Javascript.", "concept_ids": ["JS1.2.2"]}, {"learning_outcome": "Recognize the function keyword in Javascript.", "concept_ids": ["JS1.2.3"]}, {"learning_outcome": "Recall the purpose of the return keyword in Javascript.", "concept_ids": ["JS1.2.4"]}, {"learning_outcome": "List the types of operators in Javascript.", "concept_ids": ["JS1.3"]}, {"learning_outcome": "Recall the use of arithmetic operators in Javascript.", "concept_ids": ["JS1.3.1"]}, {"learning_outcome": "Identify the assignment operators in Javascript.", "concept_ids": ["JS1.3.2"]}, {"learning_outcome": "Define Javascript comments.", "concept_ids": ["JS1.4"]}, {"learning_outcome": "Recognize the difference between single line and multi line comments in Javascript.", "concept_ids": ["JS1.4.1", "JS1.4.2"]}, {"learning_outcome": "List the data types in Javascript.", "concept_ids": ["JS1.5"]}, {"learning_outcome": "Identify the primitive data types in Javascript.", "concept_ids": ["JS1.5.1"]}, {"learning_outcome": "Recall the characteristics of the object data type in Javascript.", "concept_ids": ["JS1.5.2"]}, {"learning_outcome": "Recognize the purpose of loops in Javascript.", "concept_ids": ["JS1.6"]}, {"learning_outcome": "Define Javascript functions.", "concept_ids": ["JS1.7"]}, {"learning_outcome": "Identify the structure of a function declaration in Javascript.", "concept_ids": ["JS1.7.1"]}, {"learning_outcome": "Recall the structure of a function invocation in Javascript.", "concept_ids": ["JS1.7.2"]}, {"learning_outcome": "Recognize the characteristics of Javascript objects.", "concept_ids": ["JS1.8"]}, {"learning_outcome": "Identify the properties and methods of an object in Javascript.", "concept_ids": ["JS1.8.1", "JS1.8.2"]}, {"learning_outcome": "Recall the purpose of semicolons in Javascript.", "concept_ids": ["JS1.9"]}, {"learning_outcome": "Recognize the purpose of strict mode in Javascript.", "concept_ids": ["JS1.10"]}, {"learning_outcome": "Identify the characteristics of sloppy mode in Javascript.", "concept_ids": ["JS1.11"]}], "Data Types": [{"learning_outcome": "List the basic data types provided by JavaScript", "concept_ids": ["JS1.1"]}, {"learning_outcome": "Define the term \"Primitive Data Types\" in the context of JavaScript", "concept_ids": ["JS1.1"]}, {"learning_outcome": "Recall the characteristics of Primitive Data Types in JavaScript", "concept_ids": ["JS1.1"]}, {"learning_outcome": "Recognize examples of Boolean data type in JavaScript", "concept_ids": ["JS1.1.1"]}, {"learning_outcome": "Identify the syntax for assigning a Boolean value in JavaScript", "concept_ids": ["JS1.1.1"]}, {"learning_outcome": "Define the Null data type in JavaScript", "concept_ids": ["JS1.1.2"]}, {"learning_outcome": "Recall the syntax for assigning a Null value in JavaScript", "concept_ids": ["JS1.1.2"]}, {"learning_outcome": "Recognize examples of Undefined data type in JavaScript", "concept_ids": ["JS1.1.3"]}, {"learning_outcome": "Identify the syntax for declaring a variable without assigning a value in JavaScript", "concept_ids": ["JS1.1.3"]}, {"learning_outcome": "Define the Number data type in JavaScript", "concept_ids": ["JS1.1.4"]}, {"learning_outcome": "Recall the syntax for assigning a Number value in JavaScript", "concept_ids": ["JS1.1.4"]}, {"learning_outcome": "Recognize examples of Integer and Floating Point Numbers in JavaScript", "concept_ids": ["JS1.1.4.1", "JS1.1.4.2"]}, {"learning_outcome": "Identify the syntax for assigning Integer and Floating Point Numbers in JavaScript", "concept_ids": ["JS1.1.4.1", "JS1.1.4.2"]}, {"learning_outcome": "Define the String data type in JavaScript", "concept_ids": ["JS1.1.5"]}, {"learning_outcome": "Recall the syntax for assigning a String value in JavaScript", "concept_ids": ["JS1.1.5"]}, {"learning_outcome": "Recognize examples of Single Character and Multi-character Strings in JavaScript", "concept_ids": ["JS1.1.5.1", "JS1.1.5.2"]}, {"learning_outcome": "Identify the syntax for assigning Single Character and Multi-character Strings in JavaScript", "concept_ids": ["JS1.1.5.1", "JS1.1.5.2"]}, {"learning_outcome": "Define the BigInt data type in JavaScript", "concept_ids": ["JS1.1.6"]}, {"learning_outcome": "Recall the syntax for assigning a BigInt value in JavaScript", "concept_ids": ["JS1.1.6"]}, {"learning_outcome": "Recognize examples of Symbol data type in JavaScript", "concept_ids": ["JS1.1.7"]}, {"learning_outcome": "Identify the syntax for creating a Symbol in JavaScript", "concept_ids": ["JS1.1.7"]}, {"learning_outcome": "List the complex data types provided by JavaScript", "concept_ids": ["JS1.2"]}, {"learning_outcome": "Define the term \"Complex Data Types\" in the context of JavaScript", "concept_ids": ["JS1.2"]}, {"learning_outcome": "Recall the characteristics of Complex Data Types in JavaScript", "concept_ids": ["JS1.2"]}, {"learning_outcome": "Recognize examples of Object, Array, and Function data types in JavaScript", "concept_ids": ["JS1.2.1", "JS1.2.2", "JS1.2.3"]}, {"learning_outcome": "Identify the syntax for creating Objects, Arrays, and Functions in JavaScript", "concept_ids": ["JS1.2.1", "JS1.2.2", "JS1.2.3"]}, {"learning_outcome": "Define the terms \"Object Properties\" and \"Object Methods\" in the context of JavaScript", "concept_ids": ["JS1.2.1.1", "JS1.2.1.2"]}, {"learning_outcome": "Recall the syntax for assigning Object Properties and Methods in JavaScript", "concept_ids": ["JS1.2.1.1", "JS1.2.1.2"]}, {"learning_outcome": "Recognize examples of Single Element and Multi-element Arrays in JavaScript", "concept_ids": ["JS1.2.2.1", "JS1.2.2.2"]}, {"learning_outcome": "Identify the syntax for creating Single Element and Multi-element Arrays in JavaScript", "concept_ids": ["JS1.2.2.1", "JS1.2.2.2"]}, {"learning_outcome": "Define the terms \"Function without parameters\" and \"Function with parameters\" in the context of JavaScript", "concept_ids": ["JS1.2.3.1", "JS1.2.3.2"]}, {"learning_outcome": "Recall the syntax for creating Functions without and with parameters in JavaScript", "concept_ids": ["JS1.2.3.1", "JS1.2.3.2"]}], "Loops": [{"learning_outcome_stage": "Stage 1: Understanding Loops in JavaScript", "learning_outcomes": [{"learning_outcome": "Apply the concept of loops in JavaScript to reduce the number of lines in a program.", "concept_ids": ["JS1"]}, {"learning_outcome": "Use different types of loops in JavaScript, including for, while, do...while, for...in, and for...of loops, in appropriate situations.", "concept_ids": ["JS1"]}]}, {"learning_outcome_stage": "Stage 2: Applying For Loops", "learning_outcomes": [{"learning_outcome": "Use for loops in JavaScript to repeat a set of instructions until a specified condition evaluates to false.", "concept_ids": ["JS1.1"]}, {"learning_outcome": "Execute the initialization, condition, and iteration expression in a for loop in JavaScript.", "concept_ids": ["JS1.1.1", "JS1.1.2", "JS1.1.3"]}, {"learning_outcome": "Implement a for loop in JavaScript with multiple statements in the body.", "concept_ids": ["JS1.1.4"]}]}, {"learning_outcome_stage": "Stage 3: Applying While Loops", "learning_outcomes": [{"learning_outcome": "Use while loops in JavaScript to repeat a set of instructions as long as a specified condition is true.", "concept_ids": ["JS1.2"]}, {"learning_outcome": "Execute a while loop in JavaScript with a condition and a code block.", "concept_ids": ["JS1.2.1", "JS1.2.2"]}]}, {"learning_outcome_stage": "Stage 4: Applying Do...While Loops", "learning_outcomes": [{"learning_outcome": "Use do...while loops in JavaScript to execute a loop body at least once before checking a condition.", "concept_ids": ["JS1.3"]}, {"learning_outcome": "Implement a do...while loop in JavaScript with a condition and a code block.", "concept_ids": ["JS1.3.1", "JS1.3.2"]}]}, {"learning_outcome_stage": "Stage 5: Applying For...In Loops", "learning_outcomes": [{"learning_outcome": "Use for...in loops in JavaScript to loop through an object's properties.", "concept_ids": ["JS1.4"]}, {"learning_outcome": "Implement a for...in loop in JavaScript with a variable name and an object.", "concept_ids": ["JS1.4.1", "JS1.4.2"]}, {"learning_outcome": "Execute a for...in loop in JavaScript with multiple statements in the body.", "concept_ids": ["JS1.4.3"]}]}, {"learning_outcome_stage": "Stage 6: Applying For...Of Loops", "learning_outcomes": [{"learning_outcome": "Use for...of loops in JavaScript to iterate over any iterable.", "concept_ids": ["JS1.5"]}, {"learning_outcome": "Implement a for...of loop in JavaScript with an iteration variable and an iterable.", "concept_ids": ["JS1.5.1", "JS1.5.2"]}, {"learning_outcome": "Execute a for...of loop in JavaScript with multiple statements in the body.", "concept_ids": ["JS1.5.3"]}]}, {"learning_outcome_stage": "Stage 7: Using Loop Control Statements", "learning_outcomes": [{"learning_outcome": "Apply the concept of loop control in JavaScript to change the execution from its normal sequence.", "concept_ids": ["JS1.6"]}, {"learning_outcome": "Use the break statement in JavaScript to exit a loop early.", "concept_ids": ["JS1.6.1"]}, {"learning_outcome": "Use the continue statement in JavaScript to skip the rest of the loop and continue with the next iteration.", "concept_ids": ["JS1.6.2"]}, {"learning_outcome": "Use labels in JavaScript in conjunction with break and continue to control the flow more precisely.", "concept_ids": ["JS1.6.3"]}]}]}